#!/bin/bash
# shellcheck shell=bash

# bind 'set completion-ignore-case on' # tab-autocomplete case-insensitive
# bind 'set show-all-if-ambiguous on'
# bind 'set match-hidden-files off'
# bind 'set visible-stats on'
# bind 'set completion-query-items 150'

alias TOUCH="find -type f -exec touch {} +"
alias g="gvim -p"
# alias ls="ls --color"
alias tmuxKill='tmux kill-server'
alias vncserver="vncserver :11"
# alias tao='task add project:office'
alias grep="egrep -n"

setenv() {
    export "$1=$2"
}

function date_ist() {
    TZ=Asia/Calcutta date
    #date
}
FGPULL() {
    local branch=${1:-master}
    git fetch --all
    git reset --hard origin/$branch
}

Calc() {
    local what="$*"
    echo ""
    python3 -c "from math import *  ; print(f'{$what}') "
    python3 -c "from math import *  ; print(f'{$what:,}') "
    echo ""
    python3 -c "from math import *  ; print(f'{$what:X}') "
    python3 -c "from math import *  ; print(f'{$what:_X}') "
    echo ""
    python3 -c "from math import *  ; print(f'{$what:b}') "
    python3 -c "from math import *  ; print(f'{$what:_b}') "
}

prepend() {
    local var=$1
    local val=$2
    local sep=${3:-":"}
    [[ ${!var} =~ (^|"$sep")"$val"($|"$sep") ]] && return        # already present
    [[ ${!var} ]] || { printf -v "$var" '%s' "$val" && return; } # empty
    printf -v "$var" '%s%s%s' "$val" "$sep" "${!var}"            # prepend
}

append() {
    local var=$1
    local val=$2
    local sep=${3:-":"}
    [[ ${!var} =~ (^|"$sep")"$val"($|"$sep") ]] && return        # already present
    [[ ${!var} ]] || { printf -v "$var" '%s' "$val" && return; } # empty
    printf -v "$var" '%s%s%s' "${!var}" "$sep" "${val}"          # append
}

remove() {
    local var=$1
    local val=$2
    local sep=${3:-":"}
    while [[ ${!var} =~ (^|.*"$sep")"$val"($|"$sep".*) ]]; do
        if [[ ${BASH_REMATCH[1]} && ${BASH_REMATCH[2]} ]]; then # match is between both leading and trailing content
            printf -v "$var" '%s%s' "${BASH_REMATCH[1]%$sep}" "${BASH_REMATCH[2]}"
        elif [[ ${BASH_REMATCH[1]} ]]; then # match is at the end
            printf -v "$var" "${BASH_REMATCH[1]%$sep}"
        else # match is at the beginning
            printf -v "$var" "${BASH_REMATCH[2]#$sep}"
        fi
    done
}

gitPUSH() {

    MESSAGE="$1"

    git status | \grep modified | cut -d':' -f2 | xargs git add
    git commit -m "$MESSAGE"
    git push
}
p4PUSH() {

    MESSAGE="$1"
    p4 status ... | awk '{print $1}' | xargs p4 edit
    p4 submit -d "$MESSAGE" ...
}

PUSH() {
    MESSAGE="${1:-commit-minor-mods}"
    gitPUSH "$MESSAGE"
    p4PUSH "$MESSAGE"

}
# connectTmux() {
#     if ! tmux has-session -t $USER 2>/dev/null; then
#         tmux new-session -s $USER
#     else
#         tmux rename-session $USER
#     fi
#     if ! [[ $(tmux display-message -p '#S') == $USER ]]; then
#         tmux switch-client -t $USER
#         tmux kill-session -a -t $USER
#     fi
# }
#
# createOrConnectTmux() {
#     connectTmux || tmux new-session -s $USER
# }

# WORK=snps
# createOrConnectTmux;
prepend PATH ~/bin
# export PATH=~/bin:$PATH
alias less="less -N -i -M -FsRXc -w  "

alias scp="rsync"

export P4_SYNC="p4 sync -q --parallel=threads=$(nproc),batch=8,batchsize=524288,min=1,minsize=524288 "
#$P4_SYNC&